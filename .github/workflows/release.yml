name: Release

on:
  push:
  pull_request:
    types: [closed]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate:
    name: validate
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['18']
    timeout-minutes: 20
    steps:
      - name: ⬇ Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: ⎔ Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: ⎔ Setup Node.js ${{ matrix.node-version }} for Github Packages
        uses: actions/setup-node@v3
        with:
          cache: 'pnpm'
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://npm.pkg.github.com/'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: 📥 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🏗 Build
        run: pnpm clean && pnpm build

      - name: 🔍 Verify types
        run: pnpm type-check

      - name: 💅 Verify format
        run: pnpm format --check --no-write

      - name: 🕵️ Lint
        run: pnpm lint:prod

      - name: 🛡️ Test
        run: pnpm test

      - name: 📏 Report bundle size
        uses: andresz1/size-limit-action@v1
        continue-on-error: true
        with:
          github_token: ${{ secrets.GPR_TOKEN }}

  release-npm:
    name: release-npm
    needs: validate
    runs-on: ubuntu-latest
    if:
      github.event_name == 'pull_request' && github.event.pull_request.merged == true &&
      github.event.pull_request.base.ref == 'main'
    strategy:
      matrix:
        node-version: ['18']
    timeout-minutes: 20
    steps:
      - name: ⬇ Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: ⎔ Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: ⎔ Setup Node.js ${{ matrix.node-version }} for NPM
        uses: actions/setup-node@v3
        with:
          cache: 'pnpm'
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPMJS_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPMJS_TOKEN }}

      - name: ⎔ Setup .npmrc (NPM)
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPMJS_TOKEN }}" >> ~/.npmrc

      - name: 📥 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🚀 Create Release Pull Request or Release to NPM
        uses: changesets/action@v1
        id: changesetsId
        with:
          commit: 'chore: 🤖 update versions'
          title: 'chore: 🤖 update versions'
          publish: pnpm release:publish
          version: pnpm release:version
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPMJS_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GPR_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPMJS_TOKEN }}

      - name: Print GitHub Context for Debugging
        run: |
          echo "Event Name: ${{ github.event_name }}"
          echo "Full Context:"
          echo "${{ toJson(github) }}"

  release-gpr:
    name: release-gpr
    needs: validate
    if: >
      github.event_name == 'pull_request' && github.event.pull_request.merged == true &&
      github.event.pull_request.base.ref == 'main' && github.event.pull_request.head.ref == 'changeset-release/main'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['18']
    timeout-minutes: 20
    steps:
      - name: ⬇ Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: ⎔ Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Remove existing .npmrc for NPM
        run: rm -f "$HOME/.npmrc"

      - name: ⎔ Setup Node.js ${{ matrix.node-version }} for Github Packages
        uses: actions/setup-node@v3
        with:
          cache: 'pnpm'
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://npm.pkg.github.com/'

      - name: 📥 Install dependencies for Github Packages
        run: pnpm install
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GPR_TOKEN }}

      - name: 🚀 Release to Github Packages
        uses: changesets/action@v1
        with:
          commit: 'chore: update versions'
          title: 'chore: update versions'
          publish: pnpm release:publish
          version: pnpm release:version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
