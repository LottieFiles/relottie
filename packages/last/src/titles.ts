/**
 * Copyright 2023 Design Barn Inc.
 */

export const TITLES = {
  custom: 'custom',
  string: {
    assetImageType: 'asset-image-type',
    assetType: 'asset-type',
    author: 'author',
    character: 'character',
    cssClass: 'css-class',
    description: 'description',
    expression: 'expression',
    filename: 'filename',
    fontCssClass: 'font-css-class',
    fontFamily: 'font-family',
    fontName: 'font-name',
    fontPath: 'font-path',
    fontStyle: 'font-style',
    fontWeight: 'font-weight',
    generator: 'generator',
    hexColor: 'hex-color',
    id: 'id',
    idDataSource: 'data-source-id',
    idImage: 'image-id',
    idLayerXml: 'layer-xml-id',
    idReference: 'reference-id',
    idSound: 'sound-id',
    keyword: 'keyword',
    layerXmlTagName: 'layer-xml-tag-name',
    markerComment: 'marker-comment',
    maskMode: 'mask-mode',
    matchName: 'match-name',
    name: 'name',
    path: 'path',
    shapeType: 'shape-type',
    strokeDashType: 'stroke-dash-type',
    text: 'text',
    themeColor: 'theme-color',
    version: 'version',
  },
  number: {
    adaptiveSampleLimit: 'adaptive-sample-limit',
    ascent: 'ascent',
    basedOn: 'based-on',
    baselineShift: 'baseline-shift',
    blendMode: 'blend-mode',
    composite: 'composite',
    compositionIndex: 'composition-index',
    count: 'count',
    dataSourceType: 'data-source-type',
    effectListIndex: 'effect-list-index',
    effectParametersIndex: 'effect-parameters-index',
    effectType: 'effect-type',
    effectValueType: 'effect-value-type',
    expressionPropertyIndex: 'expression-property-index',
    fillRuleValue: 'fill-rule-value',
    fontSize: 'font-size',
    framerate: 'framerate',
    gradientType: 'gradient-type',
    height: 'height',
    inPoint: 'in-point',
    layerStyleType: 'layer-style-type',
    layerType: 'layer-type',
    length: 'length',
    lineCapType: 'line-cap-type',
    lineHeight: 'line-height',
    lineJoin: 'line-join',
    lineJoinType: 'line-join-type',
    markerDuration: 'marker-duration',
    markerTime: 'marker-time',
    matteMode: 'matte-mode',
    matteTarget: 'matte-target',
    mergeMode: 'merge-mode',
    miterLimitValue: 'miter-limit-value',
    multiple: 'multiple',
    numberOfProperties: 'number-of-properties',
    outPoint: 'out-point',
    parentIndex: 'parent-index',
    propertyIndex: 'property-index',
    rangeUnits: 'range-units',
    samplesPerFrame: 'samples-per-frame',
    shapeDirection: 'shape-direction',
    shapePathIndex: 'shape-path-index',
    shapePolygonStarType: 'shape-polygon-star-type',
    shutterAngle: 'shutter-angle',
    shutterPhase: 'shutter-phase',
    staticValue: 'static-value',
    textMask: 'text-mask',
    textRangeSelectorMode: 'text-range-selector-mode',
    textTracking: 'text-tracking',
    textType: 'text-type',
    textTypeCaps: 'text-type-caps',
    textTypeGrouping: 'text-type-grouping',
    textTypeJustify: 'text-type-justify',
    textTypeShape: 'text-type-shape',
    textTypeVerticalJustify: 'text-type-vertical-justify',
    time: 'time',
    timeStart: 'start-time',
    timeStretch: 'time-stretch',
    value: 'value',
    width: 'width',
  },
  intBoolean: {
    animated: 'animated',
    autoOrient: 'auto-orient',
    embedded: 'embedded',
    enabled: 'enabled',
    expressible: 'expressible',
    extraComposition: 'extra-composition',
    hold: 'hold',
    randomize: 'randomize',
    threedimensional: 'threedimensional',
    xAxisValue: 'x-axis-value',
    yAxisValue: 'y-axis-value',
  },
  boolean: {
    closed: 'closed',
    collapseTransform: 'collapse-transform',
    hasMask: 'has-mask',
    hidden: 'hidden',
    inverted: 'inverted',
    motionBlurEnabled: 'motion-blur-enabled',
    splitEnabled: 'split-enabled',
    strokeOverFill: 'stroke-over-fill',
  },
  object: {
    animatedColor: 'animated-color',
    animatedColorStatic: 'animated-color-static',
    animatedMultidimensional: 'animated-multidimensional',
    animatedMultidimensionalStatic: 'animated-multidimensional-static',
    animatedPosition: 'animated-position',
    animatedPositionStatic: 'animated-position-static',
    animatedShape: 'animated-shape',
    animatedShapeStatic: 'animated-shape-static',
    animatedValue: 'animated-value',
    animatedValueStatic: 'animated-value-static',
    animation: 'animation',
    assetDataSource: 'asset-data-source',
    assetImage: 'asset-image',
    assetPrecomposition: 'asset-precomposition',
    assetFile: 'asset-file',
    bezier: 'bezier',
    characterData: 'character-data',
    characterPrecomp: 'character-precomp',
    characterShapes: 'character-shapes',
    effect: 'effect',
    effectCustom: 'effect-custom',
    effectDisplacementMap: 'effect-displacement-map',
    effectDropShadow: 'effect-drop-shadow',
    effectFill: 'effect-fill',
    effectGaussianBlur: 'effect-gaussian-blur',
    effectMatte3: 'effect-matte3',
    effectMeshWarp: 'effect-mesh-warp',
    effectPaintOverTransparent: 'effect-paint-over-transparent',
    effectProLevels: 'effect-pro-levels',
    effectPuppet: 'effect-puppet',
    effectRadialWipe: 'effect-radial-wipe',
    effectSpherize: 'effect-spherize',
    effectStroke: 'effect-stroke',
    effectTint: 'effect-tint',
    effectTritone: 'effect-tritone',
    effectValueAngle: 'effect-value-angle',
    effectValueCheckbox: 'effect-value-checkbox',
    effectValueColor: 'effect-value-color',
    effectValueDropdown: 'effect-value-dropdown',
    effectValueIgnored: 'effect-value-ignored',
    effectValueLayer: 'effect-value-layer',
    effectValueNoValue: 'effect-value-no-value',
    effectValuePoint: 'effect-value-point',
    effectValueSlider: 'effect-value-slider',
    effectWavy: 'effect-wavy',
    endOpacity: 'end-opacity',
    gradientOverlay: 'gradient-overlay',
    keyframe: 'keyframe',
    keyframeBezierHandle: 'keyframe-bezier-handle',
    layerAdjustment: 'layer-adjustment',
    layerAudio: 'layer-audio',
    layerCamera: 'layer-camera',
    layerData: 'layer-data',
    layerGuide: 'layer-guide',
    layerImage: 'layer-image',
    layerImagePlaceholder: 'layer-image-placeholder',
    layerImageSequence: 'layer-image-sequence',
    layerLight: 'layer-light',
    layerNull: 'layer-null',
    layerPrecomposition: 'layer-precomposition',
    layerShape: 'layer-shape',
    layerSolidColor: 'layer-solid-color',
    layerStyleBevelEmboss: 'layer-style-bevel-emboss',
    layerStyleChokeSpread: 'layer-style-choke-spread',
    layerStyleColorOverlay: 'layer-style-color-overlay',
    layerStyleDropShadow: 'layer-style-drop-shadow',
    layerStyleGradientOverlay: 'layer-style-gradient-overlay',
    layerStyleInnerGlow: 'layer-style-inner-glow',
    layerStyleInnerShadow: 'layer-style-inner-shadow',
    layerStyleOuterGlow: 'layer-style-outer-glow',
    layerStyleSatin: 'layer-style-satin',
    layerStyleStroke: 'layer-style-stroke',
    layerText: 'layer-text',
    layerVideo: 'layer-video',
    layerVideoPlaceholder: 'layer-video-placeholder',
    marker: 'marker',
    mask: 'mask',
    positionKeyframe: 'position-keyframe',
    shapeEllipse: 'shape-ellipse',
    shapeFill: 'shape-fill',
    shapeGradientFill: 'shape-gradient-fill',
    shapeGradientStroke: 'shape-gradient-stroke',
    shapeGroup: 'shape-group',
    shapeKeyframe: 'shape-keyframe',
    shapeMerge: 'shape-merge',
    shapeOffsetPath: 'shape-offset-path',
    shapePath: 'shape-path',
    shapePolygon: 'shape-polygon',
    shapePolyStar: 'shape-poly-star',
    shapePuckerBloat: 'shape-pucker-bloat',
    shapeRectangle: 'shape-rectangle',
    shapeRepeater: 'shape-repeater',
    shapeRoundedCorners: 'shape-rounded-corners',
    shapeStar: 'shape-star',
    shapeStroke: 'shape-stroke',
    shapeTransform: 'shape-transform',
    shapeTrim: 'shape-trim',
    shapeTwist: 'shape-twist',
    shapeZigZags: 'shape-zig-zag',
    splitVector: 'split-vector',
    strokeDashDefault: 'stroke-dash-default',
    strokeDashGap: 'stroke-dash-gap',
    strokeDashLength: 'stroke-dash-length',
    strokeDashOffset: 'stroke-dash-offset',
    textFont: 'text-font',
    textRange: 'text-range',
    textDocumentKeyframe: 'text-document-keyframe',
  },
  array: {
    outTangentsValue: 'out-tangents-value',
  },
  collection: {
    assets: 'assets',
    composition: 'composition',
    effectList: 'effect-list',
    effectParameters: 'effect-parameters',
    extraCompositions: 'extra-compositions',
    inTangents: 'in-tangents',
    keyframeEndValue: 'keyframe-end-value',
    keyframeList: 'keyframe-list',
    keyframeValue: 'keyframe-value',
    keywords: 'keywords',
    layerStyle: 'layer-style',
    layerStyleList: 'layer-style-list',
    markers: 'markers',
    masksProperties: 'masks-properties',
    outTangents: 'out-tangents',
    positionKeyframeList: 'position-keyframe-list',
    shapeKeyframeList: 'shape-keyframe-list',
    shapeKeyframeStart: 'shape-keyframe-start',
    shapeList: 'shape-list',
    staticValues: 'static-values',
    strokeDashList: 'stroke-dash-list',
    textRanges: 'text-ranges',
    textCharacters: 'text-characters',
    textDocumentKeyframes: 'text-document-keyframes',
    textFontList: 'text-font-list',
    valueInTangent: 'value-in-tangent',
    valueOutTangent: 'value-out-tangent',
    vertices: 'vertices',
    xAxis: 'x-axis',
    yAxis: 'y-axis',
    colorRgba: 'color-rgba',
    documentFillColor: 'document-fill-color',
    documentStrokeColor: 'document-stroke-color',
    wrapPosition: 'wrap-position',
    wrapSize: 'wrap-size',
  },
  element: {
    align: 'align',
    altitude: 'altitude',
    amount: 'amount',
    anchorPoint: 'anchor-point',
    angle: 'angle',
    animatedColorProp: 'animated-color-prop',
    animatedGradientColors: 'animated-gradient-colors',
    animatedMultidimensionalProp: 'animated-multidimensional-prop',
    animatedPositionProp: 'animated-position-prop',
    animatedShapeBezier: 'animated-shape-bezier',
    animatedShapeProp: 'animated-shape-prop',
    animatedValueProp: 'animated-value-prop',
    bevelStyle: 'bevel-style',
    blur: 'blur',
    blurSize: 'blur-size',
    center: 'center',
    chokeSpread: 'choke-spread',
    copies: 'copies',
    dilate: 'dilate',
    distance: 'distance',
    effectValueAngleValue: 'effect-value-angle-value',
    effectValueCheckboxValue: 'effect-value-checkbox-value',
    effectValueColorValue: 'effect-value-color-value',
    effectValueDropdownValue: 'effect-value-dropdown-value',
    effectValueIgnoredValue: 'effect-value-ignored-value',
    effectValueLayerValue: 'effect-value-layer-value',
    effectValuePointValue: 'effect-value-point-value',
    effectValueSliderValue: 'effect-value-slider-value',
    endPoint: 'end-point',
    fillBrightness: 'fill-brightness',
    fillColor: 'fill-color',
    fillHue: 'fill-hue',
    fillOpacity: 'fill-opacity',
    fillRule: 'fill-rule',
    fillSaturation: 'fill-saturation',
    firstMargin: 'first-margin',
    forceAlignment: 'force-alignment',
    globalAngle: 'global-angle',
    gradientOverlayScale: 'gradient-overlay-scale',
    highlightAngle: 'highlight-angle',
    highlightColor: 'highlight-color',
    highlightLength: 'highlight-length',
    highlightMode: 'highlight-mode',
    highlightOpacity: 'highlight-opacity',
    innerRadius: 'inner-radius',
    innerRoundness: 'inner-roundness',
    invert: 'invert',
    inTangent: 'in-tangent',
    jitter: 'jitter',
    lastMargin: 'last-margin',
    layerAudioSettings: 'layer-audio-settings',
    layerConceal: 'layer-conceal',
    layerStyleBlendMode: 'layer-style-blend-mode',
    layerStyleColor: 'layer-style-color',
    layerTransform: 'layer-transform',
    level: 'level',
    lineSpacing: 'line-spacing',
    maskOpacity: 'mask-opacity',
    maskVertices: 'mask-vertices',
    maxAmount: 'max-amount',
    maxEase: 'max-ease',
    metadata: 'metadata',
    minEase: 'min-ease',
    miterLimit: 'miter-limit',
    miterLimitAlternative: 'miter-limit-alternative',
    motionBlur: 'motion-blur',
    noise: 'noise',
    offset: 'offset',
    opacity: 'opacity',
    orientation: 'orientation',
    outerRadius: 'outer-radius',
    outerRoundness: 'outer-roundness',
    outTangent: 'out-tangent',
    perpendicularToPath: 'perpendicular-to-path',
    perspective: 'perspective',
    points: 'points',
    polygonRotationClockwise: 'polygon-rotation-clockwise',
    radius: 'radius',
    range: 'range',
    reverse: 'reverse',
    reversePath: 'reverse-path',
    rotationClockwise: 'rotation-clockwise',
    rotationX: 'rotation-x',
    rotationY: 'rotation-y',
    rotationZ: 'rotation-z',
    rounded: 'rounded',
    roundness: 'roundness',
    scale: 'scale',
    selectorSmoothness: 'selector-smoothness',
    shadowColor: 'shadow-color',
    shadowMode: 'shadow-mode',
    shadowOpacity: 'shadow-opacity',
    shape: 'shape',
    shapeEllipseSize: 'shape-ellipse-size',
    shapeFillColor: 'shape-fill-color',
    shapeStrokeColor: 'shape-stroke-color',
    shapeTrimEnd: 'shape-trim-end',
    shapeTrimStart: 'shape-trim-start',
    shapeZigZagSize: 'shape-zig-zag-size',
    size: 'size',
    skew: 'skew',
    skewAxis: 'skew-axis',
    smoothness: 'smoothness',
    soften: 'soften',
    source: 'source',
    splitX: 'split-x',
    splitY: 'split-y',
    splitZ: 'split-z',
    startOpacity: 'start-opacity',
    startPoint: 'start-point',
    strength: 'strength',
    strokeBrightness: 'stroke-brightness',
    strokeColor: 'stroke-color',
    strokeHue: 'stroke-hue',
    strokeLength: 'stroke-length',
    strokeOpacity: 'stroke-opacity',
    strokeSaturation: 'stroke-saturation',
    strokeWidth: 'stroke-width',
    technique: 'technique',
    textAnimatorData: 'text-animator-data',
    textCharacterData: 'text-character-data',
    textData: 'text-data',
    textStyle: 'text-style',
    textAnimatedDocument: 'text-animated-document',
    textDocument: 'text-document',
    textFonts: 'text-fonts',
    textGroupAlignment: 'text-group-alignment',
    textFollowPath: 'text-follow-path',
    textAlignmentOptions: 'text-alignment-options',
    textSelector: 'text-selector',
    textSelectorEnd: 'text-selector-end',
    textSelectorStart: 'text-selector-start',
    timeRemapping: 'time-remapping',
    letterSpacing: 'letter-spacing',
    transformOpacity: 'transform-opacity',
    transformRepeater: 'transform-repeater',
    translation: 'translation',
    userMetadata: 'user-metadata',
  },
} as const;

export type CustomTitle = typeof TITLES.custom;

export type TitleHelper<T extends string> = T | CustomTitle;

export type ChildrenTitleHelper<T extends string> = T | `${T}-children` | CustomTitle;

export type NumberTitle = TitleHelper<typeof TITLES.number[keyof typeof TITLES.number]>;

export type IntegerBooleanTitle = TitleHelper<typeof TITLES.intBoolean[keyof typeof TITLES.intBoolean]>;

export type StringTitle = TitleHelper<typeof TITLES.string[keyof typeof TITLES.string]>;

export type BooleanTitle = TitleHelper<typeof TITLES.boolean[keyof typeof TITLES.boolean]>;

export type ObjectTitle = ChildrenTitleHelper<typeof TITLES.object[keyof typeof TITLES.object]>;

export type ArrayTitle = ChildrenTitleHelper<typeof TITLES.array[keyof typeof TITLES.array]>;

export type CollectionTitle = TitleHelper<typeof TITLES.collection[keyof typeof TITLES.collection]>;

export type ElementTitle = TitleHelper<typeof TITLES.element[keyof typeof TITLES.element]>;

export type AttributeTitle = NumberTitle | StringTitle | BooleanTitle | IntegerBooleanTitle;

export type ParentTitle = CollectionTitle | ElementTitle | ObjectTitle | ArrayTitle;

export type AnyTitle = AttributeTitle | ParentTitle;
